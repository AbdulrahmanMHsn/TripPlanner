Index: app/src/main/java/amo/tripplanner/repository/TripRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.repository;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport java.util.List;\r\n\r\nimport amo.tripplanner.database.AppDatabase;\r\nimport amo.tripplanner.database.dao.TripDao;\r\nimport amo.tripplanner.pojo.Note;\r\nimport amo.tripplanner.pojo.Trip;\r\nimport amo.tripplanner.utilities.AppExecutors;\r\n\r\n\r\npublic class TripRepository {\r\n    private static final Object LOCK = new Object();\r\n    private static TripRepository mInstance;\r\n    private final TripDao tripDao;\r\n    private LiveData<List<Trip>> listTrips;\r\n\r\n    private TripRepository(Application application) {\r\n        AppDatabase database = AppDatabase.getInstance(application);\r\n        tripDao = database.tripDao();\r\n        listTrips = tripDao.getAllTrips();\r\n    }\r\n\r\n    public static TripRepository getInstance(Application application) {\r\n\r\n        if (mInstance == null) {\r\n            synchronized (LOCK) {\r\n                mInstance = new TripRepository(application);\r\n            }\r\n        }\r\n\r\n        return mInstance;\r\n    }\r\n\r\n\r\n    public LiveData<List<Trip>> getAllTrips() {\r\n        return listTrips;\r\n    }\r\n\r\n\r\n    public LiveData<Trip> getAllNotesById(int tripId) {\r\n        return tripDao.getAllNotesById(tripId);\r\n    }\r\n\r\n\r\n    public void insert(final Trip trip) {\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                tripDao.insertTrip(trip);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void update(final Trip trip) {\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                tripDao.updateTrip(trip);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void update(final int id,final List<Note> notes) {\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                tripDao.updateTrip(id,notes);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void deleteItemNote(final int id,final List<Note> notes) {\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                tripDao.deleteItemNote(id,notes);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void delete(final Trip trip) {\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                tripDao.deleteTrip(trip);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void deleteAll() {\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                tripDao.deleteAll();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/repository/TripRepository.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/repository/TripRepository.java	(date 1610999031146)
@@ -1,6 +1,8 @@
 package amo.tripplanner.repository;
 
 import android.app.Application;
+import android.os.AsyncTask;
+import android.util.Log;
 
 import androidx.lifecycle.LiveData;
 
@@ -17,6 +19,16 @@
     private static final Object LOCK = new Object();
     private static TripRepository mInstance;
     private final TripDao tripDao;
+    long idTrip;
+
+    public long getIdTrip() {
+        return idTrip;
+    }
+
+    public void setIdTrip(long idTrip) {
+        this.idTrip = idTrip;
+    }
+
     private LiveData<List<Trip>> listTrips;
 
     private TripRepository(Application application) {
@@ -47,14 +59,24 @@
     }
 
 
-    public void insert(final Trip trip) {
-        AppExecutors.getInstance().diskIO().execute(new Runnable() {
-            @Override
-            public void run() {
-                tripDao.insertTrip(trip);
-            }
-        });
+//    public void insert(final Trip trip) {
+//
+//        AppExecutors.getInstance().diskIO().execute(new Runnable() {
+//            @Override
+//            public void run() {
+//                idTrip = tripDao.insertTrip(trip);
+//                trip.setTripId((int) idTrip);
+////                setIdTrip(idTrip);
+//            }
+//        });
+//    }
+
+    public long insert(final Trip trip) {
+        new InsertTripAsyncTask(tripDao).execute(trip);
+
+        return idTrip;
     }
+
 
     public void update(final Trip trip) {
         AppExecutors.getInstance().diskIO().execute(new Runnable() {
@@ -66,24 +88,36 @@
     }
 
 
-    public void update(final int id,final List<Note> notes) {
+    public void update(final int id, final List<Note> notes) {
         AppExecutors.getInstance().diskIO().execute(new Runnable() {
             @Override
             public void run() {
-                tripDao.updateTrip(id,notes);
+                tripDao.updateTrip(id, notes);
             }
         });
     }
 
-    public void deleteItemNote(final int id,final List<Note> notes) {
+
+    public void deleteItemNote(final int id, final List<Note> notes) {
         AppExecutors.getInstance().diskIO().execute(new Runnable() {
             @Override
             public void run() {
-                tripDao.deleteItemNote(id,notes);
+                tripDao.deleteItemNote(id, notes);
             }
         });
     }
 
+
+    public void deleteItemNote(final Trip trip) {
+        AppExecutors.getInstance().diskIO().execute(new Runnable() {
+            @Override
+            public void run() {
+                tripDao.deleteItemNote(trip);
+            }
+        });
+    }
+
+
     public void delete(final Trip trip) {
         AppExecutors.getInstance().diskIO().execute(new Runnable() {
             @Override
@@ -102,6 +136,26 @@
         });
     }
 
+    private class InsertTripAsyncTask extends AsyncTask<Trip, Void, Long> {
+
+        TripDao tripDao;
 
+        public InsertTripAsyncTask(TripDao tripDao) {
+            this.tripDao = tripDao;
+        }
+
+        @Override
+        protected Long doInBackground(Trip... trips) {
+//            long idTrip = tripDao.insertTrip(trips[0]);
+//            trips[0].setTripId((int) idTrip);
+            return tripDao.insertTrip(trips[0]);
+        }
+
+        @Override
+        protected void onPostExecute(Long aLong) {
+            super.onPostExecute(aLong);
+            idTrip = aLong;
+        }
+    }
 }
 
Index: app/src/main/java/amo/tripplanner/ui/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.ui;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport amo.tripplanner.Helper.FirebaseHelper;\r\nimport amo.tripplanner.R;\r\nimport amo.tripplanner.databinding.ActivityMainBinding;\r\n\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = \"MainActivity\";\r\n\r\n    DrawerLayout drawerLayout;\r\n    NavController navController;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        Log.i(TAG, \"onCreate: started.\");\r\n        \r\n        ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main);\r\n        navController = Navigation.findNavController(this, R.id.myNavHostFragment);\r\n        drawerLayout = binding.drawerLayout;\r\n\r\n        binding.drawerToolbar.toolbarNavDrawer.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                drawerLayout.open();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/ui/MainActivity.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/ui/MainActivity.java	(date 1610999771093)
@@ -29,21 +29,17 @@
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
         Log.i(TAG, "onCreate: started.");
         
-        ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main);
-        navController = Navigation.findNavController(this, R.id.myNavHostFragment);
-        drawerLayout = binding.drawerLayout;
-
-        binding.drawerToolbar.toolbarNavDrawer.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                drawerLayout.open();
-            }
-        });
+//        ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main);
 
-
-
+//        binding.drawerToolbar.toolbarNavDrawer.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                drawerLayout.open();
+//            }
+//        });
 
     }
 
Index: app/src/main/java/amo/tripplanner/viewmodel/TripListViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.viewmodel;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport java.util.List;\r\n\r\nimport amo.tripplanner.pojo.Note;\r\nimport amo.tripplanner.pojo.Trip;\r\nimport amo.tripplanner.repository.TripRepository;\r\n\r\npublic class TripListViewModel extends AndroidViewModel {\r\n\r\n    private TripRepository mRepository;\r\n    private LiveData<List<Trip>> mAllTrips;\r\n\r\n    public TripListViewModel(@NonNull Application context) {\r\n        super(context);\r\n        mRepository = TripRepository.getInstance(context);\r\n        mAllTrips = mRepository.getAllTrips();\r\n    }\r\n\r\n    public LiveData<List<Trip>> getAllTrips() {\r\n        return mAllTrips;\r\n    }\r\n\r\n    public LiveData<Trip> getSubjectById(int tripId) {\r\n        return mRepository.getAllNotesById(tripId);\r\n    }\r\n\r\n    public void insert(Trip trip) {\r\n        mRepository.insert(trip);\r\n    }\r\n\r\n    public void update(Trip trip) {\r\n        mRepository.update(trip);\r\n    }\r\n\r\n    public void update(int id,List<Note> notes) {\r\n        mRepository.update(id,notes);\r\n    }\r\n\r\n    public void deleteItemNote(int id,List<Note> notes) {\r\n        mRepository.update(id,notes);\r\n    }\r\n\r\n    public void delete(Trip trip) {\r\n        mRepository.delete(trip);\r\n    }\r\n\r\n    public void deleteAll() {\r\n        mRepository.deleteAll();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/viewmodel/TripListViewModel.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/viewmodel/TripListViewModel.java	(date 1610998873525)
@@ -27,12 +27,16 @@
         return mAllTrips;
     }
 
-    public LiveData<Trip> getSubjectById(int tripId) {
+    public LiveData<Trip> getNoteById(int tripId) {
         return mRepository.getAllNotesById(tripId);
     }
 
-    public void insert(Trip trip) {
-        mRepository.insert(trip);
+    public long insert(Trip trip) {
+      return mRepository.insert(trip);
+    }
+
+    public long getId(){
+       return mRepository.getIdTrip();
     }
 
     public void update(Trip trip) {
@@ -44,7 +48,11 @@
     }
 
     public void deleteItemNote(int id,List<Note> notes) {
-        mRepository.update(id,notes);
+        mRepository.deleteItemNote(id,notes);
+    }
+
+    public void deleteItemNote(Trip trip) {
+        mRepository.deleteItemNote(trip);
     }
 
     public void delete(Trip trip) {
Index: app/src/main/java/amo/tripplanner/ui/home/AddTripFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.ui.home;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlarmManager;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.PendingIntent;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProviders;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.DatePicker;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.mapbox.geojson.Point;\r\nimport com.mapbox.mapboxsdk.Mapbox;\r\nimport com.mapbox.mapboxsdk.geometry.LatLng;\r\nimport com.mapbox.mapboxsdk.plugins.places.autocomplete.PlaceAutocomplete;\r\nimport com.mapbox.mapboxsdk.plugins.places.autocomplete.model.PlaceOptions;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport amo.tripplanner.R;\r\nimport amo.tripplanner.databinding.LayoutAddTripBinding;\r\nimport amo.tripplanner.pojo.Location;\r\nimport amo.tripplanner.pojo.Note;\r\nimport amo.tripplanner.pojo.Trip;\r\nimport amo.tripplanner.reciver.AlarmRciever;\r\nimport amo.tripplanner.viewmodel.TripListViewModel;\r\n\r\nimport static android.content.Context.ALARM_SERVICE;\r\n\r\n\r\npublic class AddTripFragment extends Fragment {\r\n\r\n    //vars\r\n    public static final String TAG = \"AddFragment\";\r\n    private boolean isStart;\r\n    private String[] repeats = {\"No Repeat\", \"Repeat Daily\", \"Repeat Monthly\", \"Repeat Weekly\"};\r\n    Calendar currentCalendar = Calendar.getInstance();\r\n\r\n    //Alarm\r\n    AlarmManager alarmManager;\r\n    private int notificationId = 1;\r\n    private int mYear, mMonth, mDay, currentHour, currentMin;\r\n    private String amPm;\r\n\r\n    //vars trip\r\n    private String tripName;\r\n    private String startAddress, endAddress;\r\n    private double startLatitude, startLongitude;\r\n    private double endLatitude, endLongitude;\r\n    private long timestamp;\r\n    private String tripStatus = \"Upcoming\";\r\n    private boolean tripIsRound = false;\r\n    private String tripRepeat;\r\n\r\n    //vars static\r\n    private static final int REQUEST_CODE_AUTOCOMPLETE = 1;\r\n\r\n    //biding\r\n    private LayoutAddTripBinding binding;\r\n\r\n    public AddTripFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        alarmManager = (AlarmManager) requireActivity().getSystemService(ALARM_SERVICE);\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        binding = DataBindingUtil.inflate(inflater, R.layout.layout_add_trip, container, false);\r\n\r\n        onBackPressed();\r\n\r\n        return binding.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        // choose start location trip\r\n        binding.addTripEdTxtVwTripStartPoint.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                goToAutoComplete();\r\n                isStart = true;\r\n            }\r\n        });\r\n\r\n\r\n        // choose end location trip\r\n        binding.addTripEdTxtVwTripEndPoint.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                goToAutoComplete();\r\n            }\r\n        });\r\n\r\n\r\n        // choose date trip\r\n        binding.addTripEdTxtVwTripDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showDatePickerDialog();\r\n            }\r\n        });\r\n\r\n\r\n        // choose time trip\r\n        binding.addTripEdTxtVwTripTime.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showTimePickerDialog();\r\n            }\r\n        });\r\n\r\n\r\n        // add trip\r\n        binding.addTripBtnSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Calendar calendar = Calendar.getInstance();\r\n                calendar.set(Calendar.YEAR, mYear);\r\n                calendar.set(Calendar.MONTH, mMonth);\r\n                calendar.set(Calendar.DAY_OF_MONTH, mDay);\r\n                calendar.set(Calendar.HOUR_OF_DAY, currentHour);\r\n                calendar.set(Calendar.MINUTE, currentMin);\r\n                calendar.set(Calendar.SECOND, 0);\r\n                timestamp = calendar.getTimeInMillis();\r\n\r\n                if (binding.addTripEdTxtVwTripName.getText().toString().isEmpty()) {\r\n                    binding.addTripEdTxtVwTripName.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripName.setError(getString(R.string.name_required));\r\n                    return;\r\n                }\r\n\r\n                if (binding.addTripEdTxtVwTripStartPoint.getText().toString().isEmpty()) {\r\n                    binding.addTripEdTxtVwTripStartPoint.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripStartPoint.setError(getString(R.string.startPoint_required));\r\n                    return;\r\n                }\r\n\r\n                if (binding.addTripEdTxtVwTripEndPoint.getText().toString().isEmpty()) {\r\n                    binding.addTripEdTxtVwTripEndPoint.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripEndPoint.setError(getString(R.string.endPoint_required));\r\n                    return;\r\n                }\r\n\r\n                if (binding.addTripEdTxtVwTripDate.getText().toString().isEmpty()) {\r\n                    binding.addTripEdTxtVwTripDate.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripDate.setError(getString(R.string.date_required));\r\n                    return;\r\n                }\r\n\r\n                if (binding.addTripEdTxtVwTripTime.getText().toString().isEmpty()) {\r\n                    binding.addTripEdTxtVwTripTime.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripTime.setError(getString(R.string.time_required));\r\n                    return;\r\n                }\r\n\r\n                if (timestamp < currentCalendar.getTimeInMillis()) {\r\n                    binding.addTripEdTxtVwTripDate.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripTime.setBackgroundResource(R.drawable.background_input_empty);\r\n                    binding.addTripEdTxtVwTripTime.setError(getString(R.string.time_expired));\r\n                    binding.addTripEdTxtVwTripDate.setError(getString(R.string.date_expired));\r\n                    return;\r\n                }\r\n\r\n\r\n                tripName = binding.addTripEdTxtVwTripName.getText().toString();\r\n\r\n\r\n                Location startLocation = new Location(startAddress, startLatitude, startLongitude);\r\n                Location endLocation = new Location(endAddress, endLatitude, endLongitude);\r\n                List<Note> list = new ArrayList<>();\r\n\r\n                Trip trip = new Trip(tripName, startLocation, endLocation, timestamp, tripStatus, tripIsRound, tripRepeat, list);\r\n                insertTrip(trip);\r\n                Navigation.findNavController(view).popBackStack();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        // navigating to home fragment\r\n        binding.addTripBtnClose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Navigation.findNavController(view).popBackStack();\r\n            }\r\n        });\r\n\r\n\r\n        // navigating to home fragment\r\n        binding.addTripImgBack.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Navigation.findNavController(view).popBackStack();\r\n            }\r\n        });\r\n\r\n\r\n        binding.addTripChBoxRounded.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                tripIsRound = isChecked;\r\n            }\r\n        });\r\n\r\n\r\n        binding.addTripSpnChoose.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                tripRepeat = repeats[position];\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n                tripRepeat = repeats[0];\r\n            }\r\n        });\r\n\r\n        //Creating the ArrayAdapter instance having the country list\r\n        ArrayAdapter aa = new ArrayAdapter(requireContext(), android.R.layout.simple_spinner_item, repeats);\r\n        aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        //Setting the ArrayAdapter data on the Spinner\r\n        binding.addTripSpnChoose.setAdapter(aa);\r\n    }\r\n\r\n\r\n    /*\r\n     * A function use to insert trip within room database\r\n     * */\r\n    private void insertTrip(Trip trip) {\r\n        // call observe\r\n        TripListViewModel listViewModel = ViewModelProviders.of(this).get(TripListViewModel.class);\r\n        listViewModel.insert(trip);\r\n        turnAlarmManager(timestamp, trip.getTripId());\r\n    }\r\n\r\n\r\n    /*\r\n     * A function use to create reminder\r\n     * */\r\n    @SuppressLint(\"ObsoleteSdkInt\")\r\n    private void turnAlarmManager(long timestamp, int tripId) {\r\n        Intent intent = new Intent(requireContext(), AlarmRciever.class);\r\n        intent.putExtra(\"notificationId\", notificationId);\r\n        intent.putExtra(\"Message\", binding.addTripEdTxtVwTripName.getText());\r\n\r\n        final PendingIntent pendingIntent = PendingIntent.getBroadcast(requireContext(), tripId, intent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n//        intent.putExtra(\"notificationId\",notificationId);\r\n//        intent.putExtra(\"Message\",binding.addTripEdTxtVwTripName.getText());\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, timestamp, pendingIntent);\r\n        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\r\n            alarmManager.setExact(AlarmManager.RTC_WAKEUP, timestamp, pendingIntent);\r\n        } else {\r\n            alarmManager.set(AlarmManager.RTC_WAKEUP, timestamp, pendingIntent);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /*\r\n     * A function use to open TimePickerDialog\r\n     * */\r\n    private void showTimePickerDialog() {\r\n\r\n        Calendar calendar = Calendar.getInstance();\r\n        currentHour = calendar.get(Calendar.HOUR_OF_DAY);\r\n        currentMin = calendar.get(Calendar.MINUTE);\r\n        TimePickerDialog timePickerDialog = new TimePickerDialog(requireContext(), android.R.style.Theme_Holo_Light_Dialog, new TimePickerDialog.OnTimeSetListener() {\r\n            @SuppressLint({\"SetTextI18n\", \"DefaultLocale\"})\r\n            @Override\r\n            public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                if (hourOfDay >= 12) {\r\n                    amPm = \"PM\";\r\n                } else {\r\n                    amPm = \"AM\";\r\n                }\r\n                binding.addTripEdTxtVwTripTime.setText(String.format(\"%02d : %02d \", hourOfDay, minute) + amPm);\r\n                currentHour = hourOfDay;\r\n                currentMin = minute;\r\n\r\n            }\r\n        }, currentHour, currentMin, false);\r\n\r\n        Objects.requireNonNull(timePickerDialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        timePickerDialog.show();\r\n    }\r\n\r\n\r\n    /*\r\n     * A function use to open DatePickerDialog\r\n     * */\r\n    private void showDatePickerDialog() {\r\n        Calendar cal = Calendar.getInstance();\r\n        mYear = cal.get(Calendar.YEAR);\r\n        mMonth = cal.get(Calendar.MONTH);\r\n        mDay = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n        DatePickerDialog dialog = new DatePickerDialog(requireContext(), android.R.style.Theme_Holo_Light_Dialog, new DatePickerDialog.OnDateSetListener() {\r\n            @SuppressLint(\"SimpleDateFormat\")\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                int months = month + 1;\r\n                Date date = null;\r\n                try {\r\n                    date = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dayOfMonth + \"/\" + months + \"/\" + year);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                if (date != null) {\r\n                    binding.addTripEdTxtVwTripDate.setText(new SimpleDateFormat(\"dd / MM / yyyy\").format(date));\r\n                }\r\n                mYear = year;\r\n                mMonth = month;\r\n                mDay = dayOfMonth;\r\n\r\n            }\r\n        }, mYear, mMonth, mDay);\r\n\r\n        Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialog.show();\r\n    }\r\n\r\n\r\n    /*\r\n     * A function use to open Fragment PlaceAutocomplete\r\n     * */\r\n    private void goToAutoComplete() {\r\n        Intent intent = new PlaceAutocomplete.IntentBuilder()\r\n                .accessToken(Mapbox.getAccessToken() != null ? Mapbox.getAccessToken() : getString(R.string.access_token))\r\n                .placeOptions(PlaceOptions.builder()\r\n                        .backgroundColor(Color.parseColor(\"#EEEEEE\"))\r\n                        .limit(10)\r\n                        .build(PlaceOptions.MODE_CARDS))\r\n                .build(getActivity());\r\n        startActivityForResult(intent, REQUEST_CODE_AUTOCOMPLETE);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == Activity.RESULT_OK && requestCode == REQUEST_CODE_AUTOCOMPLETE) {\r\n\r\n            assert data != null;\r\n\r\n            String address = PlaceAutocomplete.getPlace(data).placeName();\r\n\r\n            LatLng latLng = new LatLng(((Point) Objects.requireNonNull(PlaceAutocomplete.getPlace(data).geometry())).latitude(),\r\n                    ((Point) Objects.requireNonNull(PlaceAutocomplete.getPlace(data).geometry())).longitude());\r\n\r\n            if (isStart) {\r\n                startAddress = address;\r\n                startLatitude = latLng.getLatitude();\r\n                startLongitude = latLng.getLongitude();\r\n                binding.addTripEdTxtVwTripStartPoint.setText(startAddress);\r\n                isStart = false;\r\n            } else {\r\n                endAddress = address;\r\n                endLatitude = latLng.getLatitude();\r\n                endLongitude = latLng.getLongitude();\r\n                binding.addTripEdTxtVwTripEndPoint.setText(endAddress);\r\n            }\r\n\r\n\r\n            Toast.makeText(getContext(), latLng.getLatitude() + \"  \" + latLng.getLongitude(), Toast.LENGTH_SHORT).show();\r\n\r\n        }\r\n    }\r\n\r\n    private void onBackPressed() {\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                Navigation.findNavController(getView()).popBackStack();\r\n            }\r\n        };\r\n        requireActivity().getOnBackPressedDispatcher().addCallback(requireActivity(), callback);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/ui/home/AddTripFragment.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/ui/home/AddTripFragment.java	(date 1610998873522)
@@ -16,6 +16,7 @@
 import androidx.activity.OnBackPressedCallback;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.annotation.RequiresApi;
 import androidx.databinding.DataBindingUtil;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.ViewModelProviders;
@@ -67,8 +68,7 @@
     Calendar currentCalendar = Calendar.getInstance();
 
     //Alarm
-    AlarmManager alarmManager;
-    private int notificationId = 1;
+    private AlarmManager alarmManager;
     private int mYear, mMonth, mDay, currentHour, currentMin;
     private String amPm;
 
@@ -78,7 +78,7 @@
     private double startLatitude, startLongitude;
     private double endLatitude, endLongitude;
     private long timestamp;
-    private String tripStatus = "Upcoming";
+    private final String tripStatus = "Upcoming";
     private boolean tripIsRound = false;
     private String tripRepeat;
 
@@ -153,6 +153,7 @@
 
         // add trip
         binding.addTripBtnSave.setOnClickListener(new View.OnClickListener() {
+            @RequiresApi(api = Build.VERSION_CODES.GINGERBREAD)
             @Override
             public void onClick(View v) {
 
@@ -210,11 +211,16 @@
                 Location startLocation = new Location(startAddress, startLatitude, startLongitude);
                 Location endLocation = new Location(endAddress, endLatitude, endLongitude);
                 List<Note> list = new ArrayList<>();
-
-                Trip trip = new Trip(tripName, startLocation, endLocation, timestamp, tripStatus, tripIsRound, tripRepeat, list);
+                final int idAlarm = (int) System.currentTimeMillis();
+                turnOnAlarmManager(timestamp,idAlarm);
+                Trip trip = new Trip(tripName, startLocation, endLocation, timestamp, tripStatus, tripIsRound, tripRepeat, list, idAlarm);
+//                long idTrip = insertTrip(trip);
                 insertTrip(trip);
+                Log.i(TAG, "onClick: asdsadsa"+ insertTrip(trip));
+//
                 Navigation.findNavController(view).popBackStack();
-
+                Toast.makeText(v.getContext(), trip.getTripId()+"", Toast.LENGTH_SHORT).show();
+                Toast.makeText(v.getContext(), "Trip Saved", Toast.LENGTH_SHORT).show();
             }
         });
 
@@ -270,11 +276,12 @@
     /*
      * A function use to insert trip within room database
      * */
-    private void insertTrip(Trip trip) {
+    private long insertTrip(Trip trip) {
         // call observe
         TripListViewModel listViewModel = ViewModelProviders.of(this).get(TripListViewModel.class);
-        listViewModel.insert(trip);
-        turnAlarmManager(timestamp, trip.getTripId());
+//         listViewModel.insert(trip);
+         return listViewModel.insert(trip);
+//         listViewModel.getId();
     }
 
 
@@ -282,14 +289,11 @@
      * A function use to create reminder
      * */
     @SuppressLint("ObsoleteSdkInt")
-    private void turnAlarmManager(long timestamp, int tripId) {
+    private void turnOnAlarmManager(long timestamp, int alarmId) {
         Intent intent = new Intent(requireContext(), AlarmRciever.class);
-        intent.putExtra("notificationId", notificationId);
-        intent.putExtra("Message", binding.addTripEdTxtVwTripName.getText());
+//        intent.putExtra("TripID", tripId);
 
-        final PendingIntent pendingIntent = PendingIntent.getBroadcast(requireContext(), tripId, intent, PendingIntent.FLAG_CANCEL_CURRENT);
-//        intent.putExtra("notificationId",notificationId);
-//        intent.putExtra("Message",binding.addTripEdTxtVwTripName.getText());
+        final PendingIntent pendingIntent = PendingIntent.getBroadcast(requireContext(), alarmId, intent, PendingIntent.FLAG_CANCEL_CURRENT);
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, timestamp, pendingIntent);
@@ -298,7 +302,6 @@
         } else {
             alarmManager.set(AlarmManager.RTC_WAKEUP, timestamp, pendingIntent);
         }
-
     }
 
 
@@ -319,7 +322,12 @@
                 } else {
                     amPm = "AM";
                 }
-                binding.addTripEdTxtVwTripTime.setText(String.format("%02d : %02d ", hourOfDay, minute) + amPm);
+                String time12 = String.format("%02d:%02d ", hourOfDay, minute);
+                binding.addTripEdTxtVwTripTime.setText(covertTimeTo12Hours(time12) + amPm);
+
+                Log.i(TAG, "onTimeSet: time12: " + covertTimeTo12Hours(time12));
+
+//                binding.addTripEdTxtVwTripTime.setText(covertTimeTo12Hours()+ amPm);
                 currentHour = hourOfDay;
                 currentMin = minute;
 
@@ -330,6 +338,44 @@
         timePickerDialog.show();
     }
 
+    private String covertTimeTo12Hours(String time) {
+        String[] splitTime = time.split(":");
+        String time12 = splitTime[1];
+
+        switch (splitTime[0]) {
+            case "12":
+                return "12:" + time12;
+            case "13":
+                return "01:" + time12;
+
+            case "14":
+                return "02:" + time12;
+
+            case "15":
+                return "03:" + time12;
+
+            case "16":
+                return "04:" + time12;
+
+            case "17":
+                return "05:" + time12;
+
+            case "18":
+                return "06:" + time12;
+            case "19":
+                return "07:" + time12;
+            case "20":
+                return "08:" + time12;
+            case "21":
+                return "09:" + time12;
+            case "22":
+                return "10:" + time12;
+            case "23":
+                return "11:" + time12;
+        }
+        return time;
+    }
+
 
     /*
      * A function use to open DatePickerDialog
@@ -405,10 +451,6 @@
                 endLongitude = latLng.getLongitude();
                 binding.addTripEdTxtVwTripEndPoint.setText(endAddress);
             }
-
-
-            Toast.makeText(getContext(), latLng.getLatitude() + "  " + latLng.getLongitude(), Toast.LENGTH_SHORT).show();
-
         }
     }
 
@@ -416,7 +458,7 @@
         OnBackPressedCallback callback = new OnBackPressedCallback(true) {
             @Override
             public void handleOnBackPressed() {
-                Navigation.findNavController(getView()).popBackStack();
+                Navigation.findNavController(requireView()).popBackStack();
             }
         };
         requireActivity().getOnBackPressedDispatcher().addCallback(requireActivity(), callback);
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#F4F4F4\"\r\n        android:orientation=\"vertical\"\r\n        tools:context=\".homeScreen.HomeFragment\">\r\n\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/linearLayout2\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/id_recyclerView\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <include\r\n                android:id=\"@+id/toolbar\"\r\n                layout=\"@layout/snippet_toolbar_home\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/id_recyclerView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"514dp\"\r\n            android:layout_below=\"@+id/linearLayout2\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/linearLayout2\"\r\n            tools:listitem=\"@layout/item_trip\" />\r\n\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/id_btn_add_trip\"\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:layout_marginBottom=\"52dp\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_marginEnd=\"30dp\"\r\n            android:background=\"@color/blue\"\r\n            android:backgroundTint=\"@color/blue\"\r\n            android:src=\"@drawable/ic_add\"\r\n            android:textColor=\"@android:color/white\" />\r\n\r\n    </RelativeLayout>\r\n\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/res/layout/fragment_home.xml	(date 1610996907203)
@@ -53,6 +53,8 @@
             android:src="@drawable/ic_add"
             android:textColor="@android:color/white" />
 
+
+
     </RelativeLayout>
 
 
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n\r\n\r\n    <androidx.drawerlayout.widget.DrawerLayout\r\n        android:id=\"@+id/drawer_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:fitsSystemWindows=\"true\"\r\n        >\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\">\r\n            <include android:id=\"@+id/drawer_toolbar\"\r\n                layout=\"@layout/snippet_toolbar_home\"/>\r\n\r\n            <fragment\r\n                android:id=\"@+id/myNavHostFragment\"\r\n                android:name=\"androidx.navigation.fragment.NavHostFragment\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"0dp\"\r\n                app:defaultNavHost=\"true\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintLeft_toLeftOf=\"parent\"\r\n                app:layout_constraintRight_toRightOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:navGraph=\"@navigation/navigation\" />\r\n\r\n        </LinearLayout>\r\n\r\n\r\n\r\n        <!-- Container for contents of drawer - use NavigationView to make configuration easier -->\r\n        <com.google.android.material.navigation.NavigationView\r\n            android:id=\"@+id/nav_view\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_gravity=\"start\"\r\n            app:headerLayout=\"@layout/header\"\r\n            app:menu=\"@menu/drawer_menu\"\r\n            android:fitsSystemWindows=\"true\" />\r\n\r\n\r\n\r\n    </androidx.drawerlayout.widget.DrawerLayout>\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/res/layout/activity_main.xml	(date 1610999667357)
@@ -5,25 +5,25 @@
 
 
 
-    <androidx.drawerlayout.widget.DrawerLayout
-        android:id="@+id/drawer_layout"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:fitsSystemWindows="true"
-        >
+<!--    <androidx.drawerlayout.widget.DrawerLayout-->
+<!--        android:id="@+id/drawer_layout"-->
+<!--        android:layout_width="match_parent"-->
+<!--        android:layout_height="match_parent"-->
+<!--        android:fitsSystemWindows="true"-->
+<!--        >-->
 
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:orientation="vertical">
-            <include android:id="@+id/drawer_toolbar"
-                layout="@layout/snippet_toolbar_home"/>
+<!--        <LinearLayout-->
+<!--            android:layout_width="match_parent"-->
+<!--            android:layout_height="match_parent"-->
+<!--            android:orientation="vertical">-->
+<!--            <include android:id="@+id/drawer_toolbar"-->
+<!--                layout="@layout/snippet_toolbar_home"/>-->
 
             <fragment
                 android:id="@+id/myNavHostFragment"
                 android:name="androidx.navigation.fragment.NavHostFragment"
-                android:layout_width="0dp"
-                android:layout_height="0dp"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
                 app:defaultNavHost="true"
                 app:layout_constraintBottom_toBottomOf="parent"
                 app:layout_constraintLeft_toLeftOf="parent"
@@ -31,22 +31,14 @@
                 app:layout_constraintTop_toTopOf="parent"
                 app:navGraph="@navigation/navigation" />
 
-        </LinearLayout>
+<!--        </LinearLayout>-->
 
 
 
-        <!-- Container for contents of drawer - use NavigationView to make configuration easier -->
-        <com.google.android.material.navigation.NavigationView
-            android:id="@+id/nav_view"
-            android:layout_width="wrap_content"
-            android:layout_height="match_parent"
-            android:layout_gravity="start"
-            app:headerLayout="@layout/header"
-            app:menu="@menu/drawer_menu"
-            android:fitsSystemWindows="true" />
 
 
 
-    </androidx.drawerlayout.widget.DrawerLayout>
+
+<!--    </androidx.drawerlayout.widget.DrawerLayout>-->
 
 </layout>
\ No newline at end of file
Index: app/src/main/java/amo/tripplanner/database/dao/TripDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.database.dao;\r\n\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.OnConflictStrategy;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport java.util.List;\r\n\r\nimport amo.tripplanner.pojo.Note;\r\nimport amo.tripplanner.pojo.Trip;\r\n\r\n@Dao\r\npublic interface TripDao {\r\n\r\n    @Query(\"SELECT * FROM trip_table\")\r\n    LiveData<List<Trip>> getAllTrips();\r\n\r\n\r\n    @Query(\"SELECT * FROM trip_table WHERE trip_id = :tripId\")\r\n    LiveData<Trip> getAllNotesById(int tripId);\r\n\r\n\r\n    @Insert(onConflict = OnConflictStrategy.REPLACE)\r\n    void insertTrip(Trip trip);\r\n\r\n\r\n    @Update\r\n    void updateTrip(Trip trip);\r\n\r\n\r\n    @Query(\"UPDATE trip_table SET trip_note =:notes WHERE trip_id = :id\")\r\n    void updateTrip(int id, List<Note> notes);\r\n\r\n\r\n    @Query(\"UPDATE trip_table SET trip_note =:notes WHERE trip_id = :id\")\r\n    void deleteItemNote(int id, List<Note> notes);\r\n\r\n\r\n    @Delete\r\n    void deleteTrip(Trip trip);\r\n\r\n\r\n    @Query(\"DELETE FROM trip_table\")\r\n    void deleteAll();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/database/dao/TripDao.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/database/dao/TripDao.java	(date 1610996287987)
@@ -16,7 +16,11 @@
 @Dao
 public interface TripDao {
 
-    @Query("SELECT * FROM trip_table")
+//    @Query("SELECT * FROM trip_table")
+//    LiveData<List<Trip>> getAllTrips();
+
+
+    @Query("SELECT * FROM trip_table WHERE trip_status = 'Upcoming'")
     LiveData<List<Trip>> getAllTrips();
 
 
@@ -24,11 +28,14 @@
     LiveData<Trip> getAllNotesById(int tripId);
 
 
+//    @Insert(onConflict = OnConflictStrategy.REPLACE)
+//    void insertTrip(Trip trip);
+
     @Insert(onConflict = OnConflictStrategy.REPLACE)
-    void insertTrip(Trip trip);
+    long insertTrip(Trip trip);
 
 
-    @Update
+    @Update(onConflict = OnConflictStrategy.REPLACE)
     void updateTrip(Trip trip);
 
 
@@ -39,6 +46,8 @@
     @Query("UPDATE trip_table SET trip_note =:notes WHERE trip_id = :id")
     void deleteItemNote(int id, List<Note> notes);
 
+    @Delete
+    void deleteItemNote(Trip trip);
 
     @Delete
     void deleteTrip(Trip trip);
Index: app/src/main/java/amo/tripplanner/ui/home/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.ui.home;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProviders;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.provider.Settings;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.mapbox.mapboxsdk.Mapbox;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport amo.tripplanner.R;\r\nimport amo.tripplanner.adapter.TripListAdapter;\r\nimport amo.tripplanner.databinding.FragmentHomeBinding;\r\nimport amo.tripplanner.pojo.Trip;\r\nimport amo.tripplanner.viewmodel.TripListViewModel;\r\nimport timber.log.Timber;\r\n\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n\r\n    private FragmentHomeBinding bindingHome;\r\n\r\n    private TripListAdapter adapter;\r\n\r\n    private TripListViewModel listViewModel;\r\n\r\n    private List<Trip> tripList = new ArrayList<>();\r\n\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        Timber.i(\"onCreate: started.\");\r\n\r\n        Mapbox.getInstance(requireContext(), getString(R.string.access_token));\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, final ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        bindingHome = DataBindingUtil.inflate(inflater, R.layout.fragment_home, container, false);\r\n\r\n        onBackPressed();\r\n\r\n\r\n\r\n        bindingHome.idRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n        adapter = new TripListAdapter();\r\n        bindingHome.idRecyclerView.setAdapter(adapter);\r\n\r\n        listViewModel = ViewModelProviders.of(this).get(TripListViewModel.class);\r\n        listViewModel.getAllTrips().observe(getViewLifecycleOwner(), trips -> {\r\n            tripList = trips;\r\n            adapter.setTrips(tripList);\r\n        });\r\n\r\n        deleteItemBySwabbing();\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n            if (!Settings.canDrawOverlays(getContext())){\r\n                getPermission();\r\n            }\r\n        }\r\n\r\n        bindingHome.idBtnAddTrip.setOnClickListener(v -> Navigation.findNavController(container).navigate(R.id.action_homeFragment_to_addFragmentFragment));\r\n//        bindingHome.idBtnAddTrip.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n////                FirebaseHelper.getInstance(requireContext()).syncWithBackend(tripList);\r\n//                Navigation.findNavController(container).navigate(R.id.action_homeFragment_to_historyFragment);\r\n//            }\r\n//        });\r\n        return bindingHome.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n\r\n        bindingHome.toolbar.toolbarNavDrawer.setOnClickListener(v -> {\r\n//               bindingHome.drawer.open();\r\n        });\r\n\r\n    }\r\n\r\n    private void deleteItemBySwabbing() {\r\n        // Delete subject by swabbing item left and right\r\n        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {\r\n            @Override\r\n            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n                return false;\r\n            }\r\n\r\n            @SuppressLint(\"NewApi\")\r\n            @Override\r\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n                int position = viewHolder.getAdapterPosition();\r\n                final Trip subject = adapter.getItem(position);\r\n                listViewModel.delete(subject);\r\n            }\r\n        });\r\n        itemTouchHelper.attachToRecyclerView(bindingHome.idRecyclerView);\r\n    }\r\n\r\n    private void onBackPressed() {\r\n        OnBackPressedCallback callback = new OnBackPressedCallback(true) {\r\n            @Override\r\n            public void handleOnBackPressed() {\r\n                requireActivity().finish();\r\n            }\r\n        };\r\n        requireActivity().getOnBackPressedDispatcher().addCallback(requireActivity(), callback);\r\n    }\r\n\r\n    public  void getPermission(){\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !Settings.canDrawOverlays(getContext())){\r\n            Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse(\"package:\"+getActivity().getPackageName()));\r\n            startActivityForResult(intent, 1);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode == 1){\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                if(!Settings.canDrawOverlays(getContext())){\r\n                    Toast.makeText(getContext(), \"permission denied by user.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/ui/home/HomeFragment.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/ui/home/HomeFragment.java	(date 1610996288035)
@@ -1,6 +1,8 @@
 package amo.tripplanner.ui.home;
 
 import android.annotation.SuppressLint;
+import android.app.AlarmManager;
+import android.app.PendingIntent;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Build;
@@ -34,9 +36,12 @@
 import amo.tripplanner.adapter.TripListAdapter;
 import amo.tripplanner.databinding.FragmentHomeBinding;
 import amo.tripplanner.pojo.Trip;
+import amo.tripplanner.reciver.AlarmRciever;
 import amo.tripplanner.viewmodel.TripListViewModel;
 import timber.log.Timber;
 
+import static android.content.Context.ALARM_SERVICE;
+
 
 public class HomeFragment extends Fragment {
 
@@ -127,8 +132,10 @@
             @Override
             public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
                 int position = viewHolder.getAdapterPosition();
-                final Trip subject = adapter.getItem(position);
-                listViewModel.delete(subject);
+                final Trip trip = adapter.getItem(position);
+                assert trip != null;
+                cancelAlarm(trip.getIdAlarm());
+                listViewModel.delete(trip);
             }
         });
         itemTouchHelper.attachToRecyclerView(bindingHome.idRecyclerView);
@@ -146,7 +153,7 @@
 
     public  void getPermission(){
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && !Settings.canDrawOverlays(getContext())){
-            Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:"+getActivity().getPackageName()));
+            Intent intent = new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:"+ requireActivity().getPackageName()));
             startActivityForResult(intent, 1);
         }
     }
@@ -162,4 +169,12 @@
             }
         }
     }
+
+    private void cancelAlarm(int id){
+        AlarmManager alarmManager = (AlarmManager) requireActivity().getSystemService(ALARM_SERVICE);
+        Intent intent=new Intent(requireActivity(), AlarmRciever.class);
+        final PendingIntent pendingIntent=PendingIntent
+                .getBroadcast(requireContext(),id,intent,PendingIntent.FLAG_CANCEL_CURRENT);
+        alarmManager.cancel(pendingIntent);
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/item_trip.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:id=\"@+id/ItemLinearLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"150dp\"\r\n        android:backgroundTint=\"@android:color/white\"\r\n        android:elevation=\"8dp\"\r\n        app:cardCornerRadius=\"20dp\"\r\n        android:layout_margin=\"8dp\"\r\n        android:background=\"@drawable/background\">\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"8dp\"\r\n        android:background=\"@drawable/background\"\r\n        android:orientation=\"horizontal\">\r\n\r\n\r\n        <ImageView\r\n            android:id=\"@+id/item_txtVw_tripMenu\"\r\n            android:layout_width=\"25dp\"\r\n            android:layout_height=\"34dp\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"4dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:contentDescription=\"@string/menu\"\r\n            android:src=\"@drawable/ic_edit\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n        <ImageView\r\n            android:id=\"@+id/item_img_tripNote\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:contentDescription=\"@string/note\"\r\n            android:src=\"@drawable/ic_event_note\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/item_btn_startTrip\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/item_txtVw_tripMenu\"\r\n            app:layout_constraintVertical_bias=\"0.49\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/item_btn_startTrip\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:background=\"@drawable/background_btn_start\"\r\n            android:text=\"@string/start\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@android:color/white\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"4dp\"\r\n            android:layout_marginEnd=\"3dp\"\r\n            android:layout_marginBottom=\"32dp\"\r\n            android:fontFamily=\"sans-serif-black\"\r\n            android:text=\"17/01/2021\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/imageView\"\r\n            app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView3\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"4dp\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:fontFamily=\"sans-serif-black\"\r\n            android:gravity=\"start|center\"\r\n            android:text=\"04:54 PM\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/imageView\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"18dp\"\r\n            android:layout_height=\"151dp\"\r\n            android:layout_marginStart=\"65dp\"\r\n            android:layout_marginEnd=\"4dp\"\r\n            android:src=\"@drawable/edit6\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/item_txtVw_name\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/item_txtVw_name\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"4dp\"\r\n            android:fontFamily=\"sans-serif-black\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"18sp\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/imageView\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            tools:text=\"Family\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/item_txtVw_startPoint\"\r\n            android:layout_width=\"218dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"11dp\"\r\n            android:layout_marginBottom=\"4dp\"\r\n            android:ellipsize=\"end\"\r\n            android:maxLines=\"1\"\r\n            android:minLines=\"1\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"18sp\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/item_txtVw_endPoint\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/imageView\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/item_txtVw_name\"\r\n            tools:text=\"Stat Point\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/item_txtVw_endPoint\"\r\n            android:layout_width=\"218dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"4dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:ellipsize=\"end\"\r\n            android:gravity=\"start|center\"\r\n            android:maxLines=\"1\"\r\n            android:minLines=\"1\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"18sp\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/item_btn_startTrip\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/item_img_tripNote\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/imageView\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/item_txtVw_startPoint\"\r\n            tools:text=\"End Point\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/item_txtVw_status\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"4dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"18dp\"\r\n            android:textColor=\"?attr/colorControlNormal\"\r\n            android:textSize=\"12sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/imageView\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/item_txtVw_endPoint\"\r\n            tools:text=\"Upcoming\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    </androidx.cardview.widget.CardView>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_trip.xml	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/res/layout/item_trip.xml	(date 1610996288070)
@@ -67,7 +67,7 @@
             app:layout_constraintEnd_toEndOf="parent" />
 
         <TextView
-            android:id="@+id/textView2"
+            android:id="@+id/item_txtVw_date"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_marginStart="4dp"
@@ -82,7 +82,7 @@
             app:layout_constraintStart_toStartOf="parent" />
 
         <TextView
-            android:id="@+id/textView3"
+            android:id="@+id/item_txtVw_time"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_marginStart="4dp"
Index: app/src/main/java/amo/tripplanner/ui/home/NoteFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.ui.home;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProviders;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport amo.tripplanner.R;\r\nimport amo.tripplanner.adapter.NoteListAdapter;\r\nimport amo.tripplanner.databinding.FragmentNoteBinding;\r\nimport amo.tripplanner.pojo.Note;\r\nimport amo.tripplanner.viewmodel.TripListViewModel;\r\n\r\npublic class NoteFragment extends Fragment {\r\n\r\n    private FragmentNoteBinding bindingNote;\r\n    private List<Note> list = new ArrayList<>();\r\n    private NoteListAdapter adapter;\r\n    private int id;\r\n    private TripListViewModel listViewModels;\r\n\r\n\r\n    public NoteFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n         listViewModels = ViewModelProviders.of(this).get(TripListViewModel.class);\r\n        if (getArguments() != null) {\r\n            NoteFragmentArgs  args = NoteFragmentArgs.fromBundle(getArguments());\r\n            id = args.getId();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        bindingNote = DataBindingUtil.inflate(inflater, R.layout.fragment_note, container, false);\r\n\r\n        bindingNote.recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n\r\n        adapter = new NoteListAdapter();\r\n\r\n        bindingNote.recyclerView.setAdapter(adapter);\r\n\r\n\r\n        listViewModels.getSubjectById(id).observe(getViewLifecycleOwner(), trip -> {\r\n            list = trip.getTripNotes();\r\n            adapter.setNotes(list);\r\n        });\r\n\r\n        adapter.setOnItemClickListener(new NoteListAdapter.OnItemClickListener() {\r\n            @Override\r\n            public void onItemDeleteClick(int position) {\r\n                list.remove(position);\r\n                listViewModels.deleteItemNote(id,list);\r\n            }\r\n\r\n            @Override\r\n            public void onItemChecked(int position) {\r\n                list.get(position).setChecked(true);\r\n                listViewModels.update(id,list);\r\n            }\r\n        });\r\n\r\n        bindingNote.noteBtnAdd.setOnClickListener(v -> insertNoteToTrip());\r\n\r\n        bindingNote.noteImgClose.setOnClickListener(v-> Navigation.findNavController(container).popBackStack());\r\n\r\n        return bindingNote.getRoot();\r\n    }\r\n\r\n\r\n    /*\r\n     * A function use to update trip within room database\r\n     * */\r\n    private void insertNoteToTrip() {\r\n        if(bindingNote.noteEdTxtVwBody.getText().toString().isEmpty()){\r\n            bindingNote.noteEdTxtVwBody.setError(getString(R.string.text_empty));\r\n            return;\r\n        }\r\n        String body = bindingNote.noteEdTxtVwBody.getText().toString();\r\n\r\n        list.add(new Note(body));\r\n\r\n        // call observe\r\n        listViewModels.update(id,list);\r\n        bindingNote.noteEdTxtVwBody.setText(\"\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/ui/home/NoteFragment.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/ui/home/NoteFragment.java	(date 1610996288044)
@@ -1,5 +1,6 @@
 package amo.tripplanner.ui.home;
 
+import android.os.Build;
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
@@ -63,22 +64,35 @@
         bindingNote.recyclerView.setAdapter(adapter);
 
 
-        listViewModels.getSubjectById(id).observe(getViewLifecycleOwner(), trip -> {
+        listViewModels.getNoteById(id).observe(getViewLifecycleOwner(), trip -> {
             list = trip.getTripNotes();
             adapter.setNotes(list);
         });
 
+
+
         adapter.setOnItemClickListener(new NoteListAdapter.OnItemClickListener() {
             @Override
             public void onItemDeleteClick(int position) {
-                list.remove(position);
-                listViewModels.deleteItemNote(id,list);
+
+//                list.remove(adapter.getItem(position));
+////                adapter.setNotes(list);
+//                Note note = adapter.getItem(position);
+//                TripListAdapter adapter = new TripListAdapter();
+//                final Trip trip = adapter.getItem(position);
+//                Note note
+//                listViewModels.delete(trip);
+////                listViewModels.deleteItemNote(id,list);
+//
+////                for(Note note:list){
+////                    Log.i("TAGNote", "onCreateView: "+note.getBody());
+////                }
             }
 
             @Override
             public void onItemChecked(int position) {
-                list.get(position).setChecked(true);
-                listViewModels.update(id,list);
+//                list.get(position).setChecked(true);
+//                listViewModels.update(id,list);
             }
         });
 
@@ -94,9 +108,11 @@
      * A function use to update trip within room database
      * */
     private void insertNoteToTrip() {
-        if(bindingNote.noteEdTxtVwBody.getText().toString().isEmpty()){
-            bindingNote.noteEdTxtVwBody.setError(getString(R.string.text_empty));
-            return;
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {
+            if(bindingNote.noteEdTxtVwBody.getText().toString().isEmpty()){
+                bindingNote.noteEdTxtVwBody.setError(getString(R.string.text_empty));
+                return;
+            }
         }
         String body = bindingNote.noteEdTxtVwBody.getText().toString();
 
Index: app/src/main/java/amo/tripplanner/pojo/Trip.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.pojo;\r\n\r\nimport androidx.room.ColumnInfo;\r\nimport androidx.room.Entity;\r\nimport androidx.room.Ignore;\r\nimport androidx.room.PrimaryKey;\r\n\r\nimport java.util.List;\r\n\r\n@Entity(tableName = \"trip_table\")\r\npublic class Trip {\r\n\r\n    @PrimaryKey(autoGenerate = true)\r\n    @ColumnInfo(name = \"trip_id\")\r\n    private int tripId;\r\n\r\n    @ColumnInfo(name = \"trip_name\")\r\n    private String tripName;\r\n\r\n    @ColumnInfo(name = \"trip_start\")\r\n    private Location tripStartLocation;\r\n\r\n    @ColumnInfo(name = \"trip_end\")\r\n    private Location tripEndLocation;\r\n\r\n    @ColumnInfo(name = \"trip_timestamp\")\r\n    private long tripTimestamp;\r\n\r\n    @ColumnInfo(name = \"trip_status\")\r\n    private String tripStatus;\r\n\r\n    @ColumnInfo(name = \"trip_round\")\r\n    private boolean tripIsRound;\r\n\r\n    @ColumnInfo(name = \"trip_repeat\")\r\n    private String tripRepeat;\r\n\r\n    @ColumnInfo(name = \"trip_note\")\r\n    private List<Note> tripNotes;\r\n\r\n\r\n    public Trip() {\r\n    }\r\n\r\n\r\n    @Ignore\r\n    public Trip(String tripName, Location tripStartLocation, Location tripEndLocation, long tripTimestamp, String tripStatus, boolean tripIsRound, String tripRepeat) {\r\n        this.tripName = tripName;\r\n        this.tripStartLocation = tripStartLocation;\r\n        this.tripEndLocation = tripEndLocation;\r\n        this.tripTimestamp = tripTimestamp;\r\n        this.tripStatus = tripStatus;\r\n        this.tripIsRound = tripIsRound;\r\n        this.tripRepeat = tripRepeat;\r\n    }\r\n\r\n    @Ignore\r\n    public Trip(String tripName, Location tripStartLocation, Location tripEndLocation, long tripTimestamp, String tripStatus, boolean tripIsRound, String tripRepeat,List<Note> tripNotes) {\r\n        this.tripName = tripName;\r\n        this.tripStartLocation = tripStartLocation;\r\n        this.tripEndLocation = tripEndLocation;\r\n        this.tripTimestamp = tripTimestamp;\r\n        this.tripStatus = tripStatus;\r\n        this.tripIsRound = tripIsRound;\r\n        this.tripRepeat = tripRepeat;\r\n        this.tripNotes = tripNotes;\r\n    }\r\n\r\n\r\n\r\n    public String getTripStatus() {\r\n        return tripStatus;\r\n    }\r\n\r\n    public void setTripStatus(String tripStatus) {\r\n        this.tripStatus = tripStatus;\r\n    }\r\n\r\n    public long getTripTimestamp() {\r\n        return tripTimestamp;\r\n    }\r\n\r\n    public void setTripTimestamp(long tripTimestamp) {\r\n        this.tripTimestamp = tripTimestamp;\r\n    }\r\n\r\n    public boolean isTripIsRound() {\r\n        return tripIsRound;\r\n    }\r\n\r\n    public void setTripIsRound(boolean tripIsRound) {\r\n        this.tripIsRound = tripIsRound;\r\n    }\r\n\r\n    public String getTripRepeat() {\r\n        return tripRepeat;\r\n    }\r\n\r\n    public void setTripRepeat(String tripRepeat) {\r\n        this.tripRepeat = tripRepeat;\r\n    }\r\n\r\n    public List<Note> getTripNotes() {\r\n        return tripNotes;\r\n    }\r\n\r\n    public void setTripNotes(List<Note> tripNotes) {\r\n        this.tripNotes = tripNotes;\r\n    }\r\n\r\n    public int getTripId() {\r\n        return tripId;\r\n    }\r\n\r\n    public void setTripId(int tripId) {\r\n        this.tripId = tripId;\r\n    }\r\n\r\n    public String getTripName() {\r\n        return tripName;\r\n    }\r\n\r\n    public void setTripName(String tripName) {\r\n        this.tripName = tripName;\r\n    }\r\n\r\n    public Location getTripStartLocation() {\r\n        return tripStartLocation;\r\n    }\r\n\r\n    public void setTripStartLocation(Location tripStartLocation) {\r\n        this.tripStartLocation = tripStartLocation;\r\n    }\r\n\r\n    public Location getTripEndLocation() {\r\n        return tripEndLocation;\r\n    }\r\n\r\n    public void setTripEndLocation(Location tripEndLocation) {\r\n        this.tripEndLocation = tripEndLocation;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Trip{\" +\r\n                \"tripId=\" + tripId +\r\n                \", tripName='\" + tripName + '\\'' +\r\n                \", tripStartLocation=\" + tripStartLocation +\r\n                \", tripEndLocation=\" + tripEndLocation +\r\n                \", tripTimestamp=\" + tripTimestamp +\r\n                \", tripStatus='\" + tripStatus + '\\'' +\r\n                \", tripIsRound=\" + tripIsRound +\r\n                \", tripRepeat='\" + tripRepeat + '\\'' +\r\n                '}';\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/pojo/Trip.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/pojo/Trip.java	(date 1610996288055)
@@ -38,10 +38,20 @@
     @ColumnInfo(name = "trip_note")
     private List<Note> tripNotes;
 
+    @ColumnInfo(name = "trip_idAlarm")
+    private int idAlarm;
+
 
     public Trip() {
     }
 
+    public int getIdAlarm() {
+        return idAlarm;
+    }
+
+    public void setIdAlarm(int idAlarm) {
+        this.idAlarm = idAlarm;
+    }
 
     @Ignore
     public Trip(String tripName, Location tripStartLocation, Location tripEndLocation, long tripTimestamp, String tripStatus, boolean tripIsRound, String tripRepeat) {
@@ -55,7 +65,7 @@
     }
 
     @Ignore
-    public Trip(String tripName, Location tripStartLocation, Location tripEndLocation, long tripTimestamp, String tripStatus, boolean tripIsRound, String tripRepeat,List<Note> tripNotes) {
+    public Trip(String tripName, Location tripStartLocation, Location tripEndLocation, long tripTimestamp, String tripStatus, boolean tripIsRound, String tripRepeat, List<Note> tripNotes) {
         this.tripName = tripName;
         this.tripStartLocation = tripStartLocation;
         this.tripEndLocation = tripEndLocation;
@@ -66,7 +76,17 @@
         this.tripNotes = tripNotes;
     }
 
-
+    public Trip(String tripName, Location tripStartLocation, Location tripEndLocation, long tripTimestamp, String tripStatus, boolean tripIsRound, String tripRepeat, List<Note> tripNotes, int idAlarm) {
+        this.tripName = tripName;
+        this.tripStartLocation = tripStartLocation;
+        this.tripEndLocation = tripEndLocation;
+        this.tripTimestamp = tripTimestamp;
+        this.tripStatus = tripStatus;
+        this.tripIsRound = tripIsRound;
+        this.tripRepeat = tripRepeat;
+        this.tripNotes = tripNotes;
+        this.idAlarm = idAlarm;
+    }
 
     public String getTripStatus() {
         return tripStatus;
Index: app/src/main/java/amo/tripplanner/adapter/TripListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.adapter;\r\n\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport amo.tripplanner.R;\r\nimport amo.tripplanner.databinding.ItemTripBinding;\r\nimport amo.tripplanner.databinding.TripsItemBinding;\r\nimport amo.tripplanner.pojo.Trip;\r\nimport amo.tripplanner.service.FloatingWidgetService;\r\nimport amo.tripplanner.ui.home.HomeFragmentDirections;\r\n\r\npublic class TripListAdapter extends RecyclerView.Adapter<TripListAdapter.TripViewHolder> {\r\n\r\n    private static final String TAG = \"TripListAdapter\";\r\n    private List<Trip> trips = new ArrayList<>();\r\n\r\n    private OnItemClickListener mListener;\r\n    private View view;\r\n\r\n    public interface OnItemClickListener {\r\n        void onItemClick(int position);\r\n    }\r\n    public void setOnItemClickListener(OnItemClickListener listener) {\r\n        mListener = listener;\r\n    }\r\n\r\n    public TripListAdapter() {\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public TripViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        view = parent;\r\n        ItemTripBinding itemBinding = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext()), R.layout.item_trip, parent, false);\r\n\r\n        return new TripViewHolder(itemBinding);\r\n    }\r\n\r\n    @SuppressLint(\"LogNotTimber\")\r\n    @Override\r\n    public void onBindViewHolder(@NonNull TripViewHolder holder, int position) {\r\n\r\n        if(trips.isEmpty()){\r\n            Log.i(TAG, \"onBindViewHolder: my list is empty\");\r\n           return;\r\n        }\r\n        Trip item = trips.get(position);\r\n        holder.itemBinding.itemTxtVwName.setText(item.getTripName());\r\n        holder.itemBinding.itemTxtVwStartPoint.setText(item.getTripStartLocation().getAddress());\r\n        holder.itemBinding.itemTxtVwEndPoint.setText(item.getTripEndLocation().getAddress());\r\n        holder.itemBinding.itemTxtVwStatus.setText(item.getTripStatus());\r\n        long time = item.getTripTimestamp();\r\n        @SuppressLint(\"SimpleDateFormat\")\r\n        String s = new SimpleDateFormat(\"yyyy-MM-dd HH:mm aa\").format(time);\r\n        Log.i(TAG, \"onBindViewHolder: item.getTripStatus() \"+ s);\r\n\r\n\r\n        holder.itemBinding.itemTxtVwTripMenu.setOnClickListener(v -> {\r\n            HomeFragmentDirections.ActionHomeFragmentToEditTripFragment action = HomeFragmentDirections.actionHomeFragmentToEditTripFragment();\r\n            action.setId(item.getTripId());\r\n            action.setName(item.getTripName());\r\n            action.setStartPoint(item.getTripStartLocation().getAddress());\r\n            action.setEndPoint(item.getTripEndLocation().getAddress());\r\n            action.setTimestamp(item.getTripTimestamp());\r\n            action.setIsRounded(item.isTripIsRound());\r\n            action.setRepeat(item.getTripRepeat());\r\n            Navigation.findNavController(view).navigate(action);\r\n        });\r\n\r\n\r\n        holder.itemBinding.ItemLinearLayout.setOnClickListener(view -> {\r\n            if (mListener != null) {\r\n                if (position != RecyclerView.NO_POSITION) {\r\n                    mListener.onItemClick(position);\r\n                }\r\n            }\r\n        });\r\n\r\n        holder.itemBinding.itemBtnStartTrip.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent1 =new Intent(v.getContext(), FloatingWidgetService.class);\r\n                v.getContext().startService(intent1);\r\n            }\r\n        });\r\n\r\n\r\n        holder.itemBinding.itemImgTripNote.setOnClickListener(v -> {\r\n            HomeFragmentDirections.ActionHomeFragmentToNoteFragment action = HomeFragmentDirections.actionHomeFragmentToNoteFragment();\r\n            action.setId(item.getTripId());\r\n            Navigation.findNavController(view).navigate(action);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public void setTrips(List<Trip> trips) {\r\n        this.trips = trips;\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        if (trips.size() != 0)\r\n            return trips.size();\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**\r\n     * Method to get item by position.\r\n     *\r\n     * @param position\r\n     * @return\r\n     */\r\n    @Nullable\r\n    public Trip getItem(int position) {\r\n        return trips.get(position);\r\n    }\r\n\r\n    static class TripViewHolder extends RecyclerView.ViewHolder {\r\n        ItemTripBinding itemBinding;\r\n\r\n        public TripViewHolder(@NonNull ItemTripBinding itemBinding) {\r\n            super(itemBinding.getRoot());\r\n            this.itemBinding = itemBinding;\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/adapter/TripListAdapter.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/adapter/TripListAdapter.java	(date 1610996288061)
@@ -21,7 +21,6 @@
 
 import amo.tripplanner.R;
 import amo.tripplanner.databinding.ItemTripBinding;
-import amo.tripplanner.databinding.TripsItemBinding;
 import amo.tripplanner.pojo.Trip;
 import amo.tripplanner.service.FloatingWidgetService;
 import amo.tripplanner.ui.home.HomeFragmentDirections;
@@ -37,6 +36,7 @@
     public interface OnItemClickListener {
         void onItemClick(int position);
     }
+
     public void setOnItemClickListener(OnItemClickListener listener) {
         mListener = listener;
     }
@@ -53,14 +53,15 @@
         return new TripViewHolder(itemBinding);
     }
 
-    @SuppressLint("LogNotTimber")
+    @SuppressLint({"LogNotTimber", "SetTextI18n"})
     @Override
     public void onBindViewHolder(@NonNull TripViewHolder holder, int position) {
 
-        if(trips.isEmpty()){
+        if (trips.isEmpty()) {
             Log.i(TAG, "onBindViewHolder: my list is empty");
-           return;
+            return;
         }
+
         Trip item = trips.get(position);
         holder.itemBinding.itemTxtVwName.setText(item.getTripName());
         holder.itemBinding.itemTxtVwStartPoint.setText(item.getTripStartLocation().getAddress());
@@ -68,8 +69,14 @@
         holder.itemBinding.itemTxtVwStatus.setText(item.getTripStatus());
         long time = item.getTripTimestamp();
         @SuppressLint("SimpleDateFormat")
-        String s = new SimpleDateFormat("yyyy-MM-dd HH:mm aa").format(time);
-        Log.i(TAG, "onBindViewHolder: item.getTripStatus() "+ s);
+        String s = new SimpleDateFormat("dd/MM/yyyy HH:mm aa").format(time);
+        String[] timeDate = s.split(" ");
+        String dateTxt = timeDate[0];
+        String timeTxt = timeDate[1];
+        String amPmTxt = timeDate[2];
+        Log.i(TAG, "onBindViewHolder: item.getTripStatus() " + s);
+        holder.itemBinding.itemTxtVwTime.setText(covertTimeTo12Hours(timeTxt) + " " + amPmTxt);
+        holder.itemBinding.itemTxtVwDate.setText(dateTxt);
 
 
         holder.itemBinding.itemTxtVwTripMenu.setOnClickListener(v -> {
@@ -93,10 +100,11 @@
             }
         });
 
+
         holder.itemBinding.itemBtnStartTrip.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent1 =new Intent(v.getContext(), FloatingWidgetService.class);
+                Intent intent1 = new Intent(v.getContext(), FloatingWidgetService.class);
                 v.getContext().startService(intent1);
             }
         });
@@ -110,6 +118,44 @@
 
     }
 
+    private String covertTimeTo12Hours(String time) {
+        String[] splitTime = time.split(":");
+        String time12 = splitTime[1];
+
+        switch (splitTime[0]) {
+            case "12":
+                return "12:" + time12;
+            case "13":
+                return "01:" + time12;
+
+            case "14":
+                return "02:" + time12;
+
+            case "15":
+                return "03:" + time12;
+
+            case "16":
+                return "04:" + time12;
+
+            case "17":
+                return "05:" + time12;
+
+            case "18":
+                return "06:" + time12;
+            case "19":
+                return "07:" + time12;
+            case "20":
+                return "08:" + time12;
+            case "21":
+                return "09:" + time12;
+            case "22":
+                return "10:" + time12;
+            case "23":
+                return "11:" + time12;
+        }
+        return time;
+    }
+
 
     public void setTrips(List<Trip> trips) {
         this.trips = trips;
Index: app/src/main/java/amo/tripplanner/database/AppDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.database;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\n\r\nimport androidx.room.Database;\r\nimport androidx.room.Room;\r\nimport androidx.room.RoomDatabase;\r\nimport androidx.room.TypeConverters;\r\n\r\nimport amo.tripplanner.database.converter.ConverterDate;\r\nimport amo.tripplanner.database.converter.ConverterLocation;\r\nimport amo.tripplanner.database.converter.ConverterNote;\r\nimport amo.tripplanner.database.dao.TripDao;\r\nimport amo.tripplanner.pojo.Trip;\r\nimport timber.log.Timber;\r\n\r\n@Database(entities = {Trip.class}, version = 1, exportSchema = false)\r\n@TypeConverters({ConverterLocation.class, ConverterNote.class, ConverterDate.class})\r\npublic abstract class AppDatabase extends RoomDatabase {\r\n\r\n    private static final String TAG = AppDatabase.class.getSimpleName();\r\n    private static final Object LOCK = new Object();\r\n    private static final String DATABASE_NAME = \"tripssss\";\r\n    private static AppDatabase mInstance;\r\n\r\n    public static AppDatabase getInstance(Context context) {\r\n        if (mInstance == null) {\r\n            synchronized (LOCK) {\r\n                Timber.d(\"getInstance: Creating a new database instance\");\r\n                mInstance = Room.databaseBuilder(\r\n                        context.getApplicationContext(),\r\n                        AppDatabase.class,\r\n                        AppDatabase.DATABASE_NAME)\r\n                        .fallbackToDestructiveMigration()\r\n                        .build();\r\n            }\r\n        }\r\n        Timber.d(\"getInstance: Getting the database instance, no need to recreated it.\");\r\n        return mInstance;\r\n    }\r\n\r\n    public abstract TripDao tripDao();\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/database/AppDatabase.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/database/AppDatabase.java	(date 1610996288065)
@@ -15,7 +15,7 @@
 import amo.tripplanner.pojo.Trip;
 import timber.log.Timber;
 
-@Database(entities = {Trip.class}, version = 1, exportSchema = false)
+@Database(entities = {Trip.class}, version = 2, exportSchema = false)
 @TypeConverters({ConverterLocation.class, ConverterNote.class, ConverterDate.class})
 public abstract class AppDatabase extends RoomDatabase {
 
Index: app/src/main/java/amo/tripplanner/reciver/AlarmRciever.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package amo.tripplanner.reciver;\r\n\r\nimport android.app.Notification;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.RequiresApi;\r\n\r\nimport amo.tripplanner.R;\r\nimport amo.tripplanner.ui.DailogActivity;\r\nimport amo.tripplanner.ui.MainActivity;\r\n\r\npublic class AlarmRciever extends BroadcastReceiver {\r\n    static String msg;\r\n    Context context;\r\n    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)\r\n    @Override\r\n    public void onReceive(Context context1, Intent intent) {\r\n\r\n        Toast.makeText(context1, \"Done\", Toast.LENGTH_SHORT).show();\r\n        context = context1;\r\n\r\n        int notificationId = intent.getIntExtra(\"notificationId\", 0);\r\n\r\n        msg = intent.getStringExtra(\"Message\");\r\n\r\n       /* if (\"android.intent.action.BOOT_COMPLETED\".equals(intent.getAction())) {\r\n            Intent serviceIntent = new Intent(context, MainActivity.class);\r\n\r\n            context.startService(serviceIntent);\r\n        }*/\r\n\r\n        Intent i = new Intent(context, DailogActivity.class);\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {\r\n            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        }\r\n\r\n        context.startActivity(i);\r\n\r\n        Intent mainIntent = new Intent(context, MainActivity.class);\r\n\r\n        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, mainIntent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n\r\n        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\r\n\r\n        Notification.Builder builder = null;\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {\r\n            builder = new Notification.Builder(context);\r\n            builder.setSmallIcon(R.drawable.ic_notifications)\r\n                    .setContentTitle(\"TRIP TO DO\")\r\n                    .setContentText(\"msg\")\r\n                    .setWhen(System.currentTimeMillis())\r\n                    .setOngoing(true)\r\n                    .setContentIntent(pendingIntent)\r\n                    .setPriority(Notification.PRIORITY_MAX)\r\n                    .setDefaults(Notification.DEFAULT_ALL);\r\n\r\n            notificationManager.notify(notificationId, builder.build());\r\n        }\r\n\r\n//        DailogActivity.openDialog(context);\r\n\r\n//\r\n//        int notificationId=intent.getIntExtra(\"notificationId\",0);\r\n//\r\n//\r\n//\r\n//        Intent i = new Intent(context, DailogActivity.class);\r\n//        i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n//        context.startActivity(i);\r\n//\r\n//\r\n//        String msg=intent.getStringExtra(\"Message\");\r\n//\r\n////        Intent mainIntent=new Intent(context, MainActivity.class);\r\n////        PendingIntent pendingIntent=PendingIntent.getActivity(context,0,mainIntent,0);\r\n//\r\n//        NotificationManager notificationManager=(NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);\r\n//\r\n//        Notification.Builder builder=new Notification.Builder(context);\r\n//        builder.setSmallIcon(R.drawable.ic_account)\r\n//                .setContentTitle(\"TRIP TO DO\")\r\n//                .setContentText(msg)\r\n//                .setWhen(System.currentTimeMillis())\r\n//                .setAutoCancel(true)\r\n//                .setPriority(Notification.PRIORITY_MAX)\r\n//                .setDefaults(Notification.DEFAULT_ALL);\r\n//\r\n//        notificationManager.notify(notificationId,builder.build());\r\n//\r\n//        Toast.makeText(context, \"Done\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/amo/tripplanner/reciver/AlarmRciever.java	(revision 9aee567fa8853884fce3ee7ca0c377b5232645ab)
+++ app/src/main/java/amo/tripplanner/reciver/AlarmRciever.java	(date 1610996288051)
@@ -10,7 +10,9 @@
 import android.widget.Toast;
 
 import androidx.annotation.RequiresApi;
+import androidx.core.app.NotificationCompat;
 
+import amo.tripplanner.Helper.NotificationHelper;
 import amo.tripplanner.R;
 import amo.tripplanner.ui.DailogActivity;
 import amo.tripplanner.ui.MainActivity;
@@ -39,29 +41,32 @@
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
             i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK);
         }
-
         context.startActivity(i);
 
-        Intent mainIntent = new Intent(context, MainActivity.class);
-
-        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, mainIntent, PendingIntent.FLAG_CANCEL_CURRENT);
-
-        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
-
-        Notification.Builder builder = null;
-        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
-            builder = new Notification.Builder(context);
-            builder.setSmallIcon(R.drawable.ic_notifications)
-                    .setContentTitle("TRIP TO DO")
-                    .setContentText("msg")
-                    .setWhen(System.currentTimeMillis())
-                    .setOngoing(true)
-                    .setContentIntent(pendingIntent)
-                    .setPriority(Notification.PRIORITY_MAX)
-                    .setDefaults(Notification.DEFAULT_ALL);
-
-            notificationManager.notify(notificationId, builder.build());
-        }
+//        NotificationHelper notificationHelper = new NotificationHelper(context);
+//        NotificationCompat.Builder nb = notificationHelper.getChannelNotification();
+//        notificationHelper.getManager().notify(1, nb.build());
+//
+//        Intent mainIntent = new Intent(context, MainActivity.class);
+//
+//        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, mainIntent, PendingIntent.FLAG_CANCEL_CURRENT);
+//
+//        NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
+//
+//        Notification.Builder builder = null;
+//        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.HONEYCOMB) {
+//            builder = new Notification.Builder(context);
+//            builder.setSmallIcon(R.drawable.ic_notifications)
+//                    .setContentTitle("TRIP TO DO")
+//                    .setContentText("msg")
+//                    .setWhen(System.currentTimeMillis())
+//                    .setOngoing(true)
+//                    .setContentIntent(pendingIntent)
+//                    .setPriority(Notification.PRIORITY_MAX)
+//                    .setDefaults(Notification.DEFAULT_ALL);
+//
+//            notificationManager.notify(notificationId, builder.build());
+//        }
 
 //        DailogActivity.openDialog(context);
 
